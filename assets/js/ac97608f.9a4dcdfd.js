"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[9196],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,y=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(y,a(a({ref:t},c),{},{components:n})):r.createElement(y,a({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5506:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return u}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],p={sidebar_position:3},l="Styling Your Component",s={unversionedId:"getting-started/styling-your-component",id:"version-0.2.0/getting-started/styling-your-component",title:"Styling Your Component",description:"Importing CSS",source:"@site/versioned_docs/version-0.2.0/getting-started/styling-your-component.md",sourceDirName:"getting-started",slug:"/getting-started/styling-your-component",permalink:"/msfs-avionics-mirror/docs/getting-started/styling-your-component",draft:!1,tags:[],version:"0.2.0",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Creating Your First Component",permalink:"/msfs-avionics-mirror/docs/getting-started/creating-your-first-component"},next:{title:"Adding Component Props",permalink:"/msfs-avionics-mirror/docs/getting-started/adding-component-props"}},c={},u=[{value:"Importing CSS",id:"importing-css",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"styling-your-component"},"Styling Your Component"),(0,i.kt)("h2",{id:"importing-css"},"Importing CSS"),(0,i.kt)("p",null,"Because we configured Rollup previously with the ability to import and bundle CSS, keeping styling encapsulated is easy. Create a file ",(0,i.kt)("inlineCode",{parentName:"p"},"MyComponent.css")," in the project root, and add the following CSS code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-css"},".my-component {\n  font-size: 40px;\n}\n")),(0,i.kt)("p",null,"You can then add an import line to the top of the ",(0,i.kt)("inlineCode",{parentName:"p"},"MyComponent.tsx")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"import './MyComponent.css';\n")),(0,i.kt)("p",null,"This lets Rollup know that it will need to bundle that CSS file (",(0,i.kt)("inlineCode",{parentName:"p"},"MyComponent.css"),") into the final single-file CSS output (",(0,i.kt)("inlineCode",{parentName:"p"},"MyInstrument.css"),"). When you build your project with ",(0,i.kt)("inlineCode",{parentName:"p"},"npm run build"),", you should now also see the configured ",(0,i.kt)("inlineCode",{parentName:"p"},"MyInstrument.css")," file in the ",(0,i.kt)("inlineCode",{parentName:"p"},"build")," folder alongside your ",(0,i.kt)("inlineCode",{parentName:"p"},"MyInstrument.js")," compiled JS file. You can now copy this file to the appropriate location in your MSFS package sources, alongside the HTML file."),(0,i.kt)("p",null,"Once the MSFS package has been rebuilt and re-synced, you should now see your new styling applied to the ",(0,i.kt)("inlineCode",{parentName:"p"},"Hello World!")," text within your component on your panel."))}m.isMDXComponent=!0}}]);